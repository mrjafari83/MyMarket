#pragma checksum "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "56cd1b718688fd47314d568caf7dd0cfef1032cb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Product_Edit), @"mvc.1.0.view", @"/Areas/Admin/Views/Product/Edit.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
using Application.Services.Admin.Products.Queries.GetProductById;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"56cd1b718688fd47314d568caf7dd0cfef1032cb", @"/Areas/Admin/Views/Product/Edit.cshtml")]
    public class Areas_Admin_Views_Product_Edit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GetProductByIdDto>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("categoryId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("formValidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formValidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
  
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-content\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "56cd1b718688fd47314d568caf7dd0cfef1032cb4934", async() => {
                WriteLiteral("\r\n                    <div class=\"row\">\r\n                        <div class=\"input-field col s12\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "56cd1b718688fd47314d568caf7dd0cfef1032cb5326", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 16 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.Categories;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                            <label>دسته بندی ها</label>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <label for=\"name\"");
                BeginWriteAttribute("class", " class=\"", 840, "\"", 848, 0);
                EndWriteAttribute();
                WriteLiteral(">نام کالا*</label>\r\n                            <input");
                BeginWriteAttribute("value", " value=\"", 903, "\"", 922, 1);
#nullable restore
#line 21 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
WriteAttributeValue("", 911, Model.Name, 911, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" id=""name"" name=""name"" type=""text"" data-error="".errorTxt1"">
                            <div class=""errorTxt1""></div>
                        </div>
                        <div class=""input-field col s12"">
                            <label for=""brand"">برند</label>
                            <input");
                BeginWriteAttribute("value", " value=\"", 1229, "\"", 1249, 1);
#nullable restore
#line 26 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
WriteAttributeValue("", 1237, Model.Brand, 1237, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" id=\"brand\" type=\"text\" name=\"brand\">\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <label for=\"shortDescription\">توضیحات مختصر*</label>\r\n                            <input");
                BeginWriteAttribute("value", " value=\"", 1496, "\"", 1527, 1);
#nullable restore
#line 30 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
WriteAttributeValue("", 1504, Model.ShortDescription, 1504, 23, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" id=""shortDescription"" type=""text"" name=""shortDescription"" data-error="".errorTxt4"">
                            <div class=""errorTxt4""></div>
                        </div>
                        <div class=""input-field col s12"">
                            <textarea id=""description"" name=""description"" data-error="".errorTxt5"">");
#nullable restore
#line 34 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                                                                             Write(Model.Description);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</textarea>
                            <div class=""errorTxt5""></div>
                        </div>
                        <div class=""input-field col s12 file-field"">
                            <div class=""btn cyan"">
                                <span>تصاویر</span>
                                <input multiple type=""file"" id=""images"" name=""images"">
                            </div>
                            <div class=""file-path-wrapper"">
                                <input class=""file-path validate"" type=""text"">
                            </div>
                        </div>

                        <div class=""input-field col s12"">
                            <label for=""keywordValue"">کلمه کلیدی : </label>
                            <input type=""text"" id=""keywordValue"" class=""validate"" />
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateKeyword"">
                                افزودن
                            </a>
          ");
                WriteLiteral(@"              </div>
                        <table class=""highlight"">
                            <thead>
                                <tr>
                                    <th>کلمه کلیدی</th>
                                </tr>
                            </thead>
                            <tbody id=""keywordTable"">
");
#nullable restore
#line 61 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                 if (Model.Keywords.Any())
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 62 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                     foreach (var item in Model.Keywords)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 65 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.KeywordValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td><a class=\"idFeatures btn red waves-effect waves-light right\">حذف</a></td>\r\n                                        </tr>\r\n");
#nullable restore
#line 68 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            </tbody>
                        </table>
                        <hr />

                        <div class=""input-field col s12"">
                            <label for=""featureDisplay""> نام ویژگی : </label>
                            <input type=""text"" id=""featureDisplay"" class=""validate"" />
                        </div>
                        <div class=""input-field col s12"">
                            <label for=""featureValue""> مقدار ویژگی : </label>
                            <input type=""text"" id=""featureValue"" class=""validate"" />
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateFeature"">
                                افزودن
                            </a>
                        </div>
                        <table class=""highlight"">
                            <thead>
                                <tr>
                                    <th>نام ویژگی</th>
                                    <th>مقدا");
                WriteLiteral("ر ویژگی</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody id=\"featureTable\">\r\n");
#nullable restore
#line 92 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                 if (Model.Features.Any())
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 93 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                     foreach (var item in Model.Features)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 96 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.Display);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td>");
#nullable restore
#line 97 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.FeatureValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td><a class=\"idFeatures btn red waves-effect waves-light right\">حذف</a></td>\r\n                                        </tr>\r\n");
#nullable restore
#line 100 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            </tbody>
                        </table>
                        <hr />
                        <div class=""input-field col s12"">
                            <label for=""colorValue""> رنگ : </label>
                            <input type=""text"" id=""colorValue"" class=""validate"" />
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateColor"">
                                افزودن
                            </a>
                        </div>
                        <div class=""input-field col s12"">
                            ");
#nullable restore
#line 112 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                       Write(await Component.InvokeAsync("ColorsInSelectList"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateColorByList"">
                                افزودن
                            </a>
                        </div>
                        <table class=""highlight"">
                            <thead>
                                <tr>
                                    <th>رنگ ها</th>
                                </tr>
                            </thead>
                            <tbody id=""colorTable"">
");
#nullable restore
#line 124 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                 if (Model.Colors.Any())
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 125 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                     foreach (var item in Model.Colors)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 128 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td><a class=\"idFeatures btn red waves-effect waves-light right\">حذف</a></td>\r\n                                        </tr>\r\n");
#nullable restore
#line 131 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            </tbody>
                        </table>
                        <hr />
                        <div class=""input-field col s12"">
                            <label for=""sizeValue""> سایز : </label>
                            <input type=""text"" id=""sizeValue"" class=""validate"" />
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateSize"">
                                افزودن
                            </a>
                        </div>
                        <div class=""input-field col s12"">
                            ");
#nullable restore
#line 143 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                       Write(await Component.InvokeAsync("SizesInSelectList"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            <a class=""btn green waves-effect waves-light right"" id=""btnCreateSizeByList"">
                                افزودن
                            </a>
                        </div>
                        <table class=""highlight"">
                            <thead>
                                <tr>
                                    <th>سایز ها</th>
                                </tr>
                            </thead>
                            <tbody id=""sizeTable"">
");
#nullable restore
#line 155 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                 if (Model.Sizes.Any())
                                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 156 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                     foreach (var item in Model.Sizes)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 159 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.SizeValue);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td><a class=\"idFeatures btn red waves-effect waves-light right\">حذف</a></td>\r\n                                        </tr>\r\n");
#nullable restore
#line 162 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            </tbody>
                        </table>
                        <hr />
                        <table class=""highlight"">
                            <thead>
                                <tr>
                                    <th>
                                        <a class=""btn green waves-effect waves-light right"" id=""btnSetInventoryTable"">
                                            تنظیم موجودی ها و قیمت
                                        </a>
                                    </th>
                                </tr>
                                <tr>
                                    <th>رنگ</th>
                                    <th>سایز</th>
                                    <th>موجودی</th>
                                    <th>قیمت</th>
                                </tr>
                            </thead>
                            <tbody id=""inventoryTable"">
");
#nullable restore
#line 183 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                 if (Model.InventoryAndPrices.Count() != 0)
                                {
                                    foreach (var item in Model.InventoryAndPrices)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <tr>\r\n                                            <td>");
#nullable restore
#line 188 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.ColorName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td>");
#nullable restore
#line 189 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                           Write(item.SizeName);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                                            <td>\r\n                                                <input type=\"number\"");
                BeginWriteAttribute("value", " value=", 10336, "", 10358, 1);
#nullable restore
#line 191 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
WriteAttributeValue("", 10343, item.Inventory, 10343, 15, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" class=\"validate\" />\r\n                                            </td>\r\n                                            <td>\r\n                                                <input type=\"number\"");
                BeginWriteAttribute("value", " value=", 10549, "", 10567, 1);
#nullable restore
#line 194 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
WriteAttributeValue("", 10556, item.Price, 10556, 11, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" class=\"validate\" />\r\n                                            </td>\r\n                                            <td hidden>");
#nullable restore
#line 196 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                                  Write(item.ProductId);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</td>
                                            <td>
                                                <a class=""idFeatures btn red waves-effect waves-light right"">حذف</a>
                                            </td>
                                        </tr>
");
#nullable restore
#line 201 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                    }
                                }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                            </tbody>
                        </table>
                        <p id=""invemtoryTableError"" style=""color:red;font-size:110%""></p>
                        <div class=""input-field col s12"">
                            <button class=""btn waves-effect waves-light right submit green"" type=""submit"" name=""action"">افزودن</button>
                        </div>
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br />\r\n<br />\r\n<br />\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script src=""/ckeditor/ckeditor.js""></script>
<script src=""/ckeditor/adapters/jquery.js""></script>

<script src=""/Admin/assets/extra-libs/prism/prism.js""></script>
<script src=""/Admin/dist/js/pages/forms/jquery.validate.min.js""></script>
<script>
    $(document).ready(function () {
        $(""#formValidate"").validate({
            rules: {
                name: {
                    required: true,
                },
                price: {
                    required: true,
                },
                inventory: {
                    required: true,
                },
                shortDescription: {
                    required: true,
                },
                description: {
                    required: true,
                },
            },
            //For custom messages
            messages: {
                name: {
                    required: ""یک نام انتخاب کنید"",
                },
                price: {
                    required: ""قیمت ");
                WriteLiteral(@"کالا را وارد کنید"",
                },
                inventory: {
                    required: ""موجودی کالا(در انبار) را وارد کنید"",
                },
                shortDescription: {
                    required: ""توضیحات مختصر را وارد کنید"",
                },
                description: {
                    required: ""توضیحات محصول را وارد کنید"",
                },
            },
            errorElement: 'div',
            errorPlacement: function (error, element) {
                var placement = $(element).data('error');
                if (placement) {
                    $(placement).append(error)
                } else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function () {
                var formdata = new FormData();
                formdata.append(""Id"", """);
#nullable restore
#line 276 "C:\Users\Kar1\Desktop\MyMarket\Market.EndPoint\Areas\Admin\Views\Product\Edit.cshtml"
                                  Write(Model.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@""");
                formdata.append(""Name"", $(""#name"").val());
                formdata.append(""Brand"", $(""#brand"").val());
                formdata.append(""Description"", $(""#description"").val());
                formdata.append(""ShortDescription"", $(""#shortDescription"").val());
                formdata.append(""Inventory"", $(""#inventory"").val());
                formdata.append(""Price"", $(""#price"").val());
                formdata.append(""CategoryId"", $(""#categoryId"").find(""option:selected"").val());

                var productImages = document.getElementById(""images"");
                if (productImages.files.length > 0) {
                    for (var i = 0; i < productImages.files.length; i++) {
                        formdata.append('Images', productImages.files[i]);
                    }
                }

                var Keywords = $('#keywordTable tr').map(function () {
                    return {
                        KeywordValue: $(this.cells[0]).text(),
                    ");
                WriteLiteral(@"};
                }).get();
                $.each(Keywords, function (i, val) {
                    formdata.append('[' + i + '].KeywordValue', val.KeywordValue);
                });

                var colors = $('#colorTable tr').map(function () {
                    return {
                        Name: $(this.cells[0]).text(),
                    };
                }).get();
                $.each(colors, function (i, val) {
                    formdata.append('[' + i + '].Name', val.Name);
                });

                var sizes = $('#sizeTable tr').map(function () {
                    return {
                        SizeValue: $(this.cells[0]).text(),
                    };
                }).get();
                $.each(sizes, function (i, val) {
                    formdata.append('[' + i + '].SizeValue', val.SizeValue);
                });

                var features = $('#featureTable tr').map(function () {
                    return {
                      ");
                WriteLiteral(@"  Display: $(this.cells[0]).text(),
                        FeatureValue: $(this.cells[1]).text(),
                    };
                }).get();
                $.each(features, function (i, val) {
                    formdata.append('[' + i + '].Display', val.Display);
                    formdata.append('[' + i + '].FeatureValue', val.FeatureValue);
                });

                var inventoryAndPrice = $('#inventoryTable tr').map(function () {
                    return {
                        ColorName: $(this.cells[0]).text(),
                        SizeName: $(this.cells[1]).text(),
                        Inventory: $(this.cells[2]).children('input').val(),
                        Price: $(this.cells[3]).children('input').val(),
                        ProductId: $(this.cells[4]).text(),
                    };
                }).get();
                $.each(inventoryAndPrice, function (i, val) {
                    formdata.append('[' + i + '].ColorName', val.ColorName);");
                WriteLiteral(@"
                    formdata.append('[' + i + '].SizeName', val.SizeName);
                    formdata.append('[' + i + '].Inventory', val.Inventory);
                    formdata.append('[' + i + '].Price', val.Price);
                    formdata.append('[' + i + '].ProductId', val.ProductId);
                });

                debugger;
                var colorRowsCount = document.getElementById(""colorTable"").rows.length;
                var sizeRowsCount = document.getElementById(""sizeTable"").rows.length;;
                var inventoryAndPriceCount = inventoryAndPrice.length;

                if((colorRowsCount * sizeRowsCount === inventoryAndPriceCount && inventoryAndPriceCount != 0)
                || (colorRowsCount != 0 && inventoryAndPriceCount != 0) || (sizeRowsCount != 0 && inventoryAndPriceCount != 0)){
                    $.ajax({
                    type: ""POST"",
                    processData: false,
                    contentType: false,
                    cache: fals");
                WriteLiteral(@"e,
                    enctype: ""multipart/form-data"",
                    url: ""/Admin/Product/Edit"",
                    data: formdata,
                    success: function (response) {
                        window.location.href = ""/Admin/Product"";
                    }
                });
                }

                else{
                    document.getElementById(""invemtoryTableError"").innerHTML = ""لطفا اطلاعات جدول قیمت ها و موجودی ها را پر کنید.""
                }
            }
        });

        //کنترل جدول کلمات کلیدی برای اضافه و حذف نمودن خط به جدول
        $(""#btnCreateKeyword"").click(function (e) {
            var table = document.getElementById(""keywordTable"");
            var keyValue = document.getElementById(""keywordValue"").value;

            if (keyValue !== """") {
                CreateRow(table, [keyValue], true);
            }

            $(""#keywordValue"").val("""");
        });

        $(""#keywordTable"").on('click', '.idFeatures', function () {");
                WriteLiteral(@"
            $(this).closest('tr').remove();
        });

        //کنترل جدول رنگ ها برای افزودن و حذف نمودن خط به جدول
        $(""#btnCreateColor"").click(function (e) {
            var table = document.getElementById(""colorTable"");
            var keyValue = document.getElementById(""colorValue"").value;

            if (keyValue !== """") {
                CreateRow(table, [keyValue], true);
            }

            $(""#colorValue"").val("""");
        });

        $(""#colorTable"").on('click', '.idFeatures', function () {
            $(this).closest('tr').remove();
        });

        //کنترل جدول سایز ها برای افزودن و حذف نمودن خط به جدول
        $(""#btnCreateSize"").click(function (e) {
            var table = document.getElementById(""sizeTable"");
            var keyValue = document.getElementById(""sizeValue"").value;

            if (keyValue !== """") {
                CreateRow(table, [keyValue], true);
            }

            $(""#sizeValue"").val("""");
        });

        $(""");
                WriteLiteral(@"#sizeTable"").on('click', '.idFeatures', function () {
            $(this).closest('tr').remove();
        });

        //کنترل جدول ویژگی ها برای افزودن و حذف نمودن خط به جدول
        $(""#btnCreateFeature"").click(function (e) {
            debugger;
            var table = document.getElementById(""featureTable"");
            var display = document.getElementById(""featureDisplay"").value;
            var value = document.getElementById(""featureValue"").value;

            if (value !== """" && display !== """") {
                CreateRow(table, [display, value], true);
            }

            $(""#featureDisplay"").val("""");
            $(""#featureValue"").val("""");
        });

        $(""#featureTable"").on('click', '.idFeatures', function () {
            $(this).closest('tr').remove();
        });

        //افزودن رنگ با لیست
        $(""#btnCreateColorByList"").click(function (e) {
            var colors = document.getElementById(""ColorsList"").options;
            var table = document.get");
                WriteLiteral(@"ElementById(""colorTable"");
            debugger;
            for (var i = 0; i < colors.length; i++) {
                if (colors[i].selected && !colors[i].disabled) {
                    CreateRow(table, [colors[i].value], true);
                }
            };
        });

        //افزودن سایر با لیست
        $(""#btnCreateSizeByList"").click(function (e) {
            var sizes = document.getElementById(""SizesList"").options;
            var table = document.getElementById(""sizeTable"");
            debugger;
            for (var i = 0; i < sizes.length; i++) {
                if (sizes[i].selected && !sizes[i].disabled) {
                    CreateRow(table, [sizes[i].value], true);
                }
            };
        });

        //متد افزودن خط
        function CreateRow(table, values, withDeleteKey) {
            debugger;
            var newRow = ""<tr>"";
            for (var i = 0; i < values.length; i++) {
                newRow += ""<td>"" + values[i] + ""</td>"";
         ");
                WriteLiteral(@"   }

            if (withDeleteKey === true) {
                newRow += '<td><a class=""idFeatures btn red waves-effect waves-light right"" >حذف</a></td>';
            }

            newRow += ""</tr>"";
            table.innerHTML += newRow;
        }

        $(function () {
            $('#description').ckeditor();
        });

         $(""#btnSetInventoryTable"").click(function (e) {
             debugger;
             var sizeRows = document.getElementById(""sizeTable"").rows;
             var colorRows = document.getElementById(""colorTable"").rows;
             var sizes = [];
             for(var i =0;i<sizeRows.length;i++){
                 sizes.push(sizeRows[i].cells[0].innerHTML);
             }
             var colors = [];
             for(var i =0;i<colorRows.length;i++){
                 colors.push(colorRows[i].cells[0].innerHTML);
             }

             var inventoryTable = document.getElementById(""inventoryTable"");
             inventoryTable.innerHTML = """";
    ");
                WriteLiteral(@"         if(colorRows.length != 0 && sizeRows.length != 0){
                 for(var i = 1;i<=colorRows.length; i++){
                 for(var j =1; j<=sizeRows.length;j++){
                     var row = ""<tr>"";
                     row += ""<td>"" + colors[i-1] + ""</td>"";
                     row += ""<td>"" + sizes[j-1] + ""</td>"";
                     row+= '<td><input type=""number"" id=""inventory'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row+= '<td><input type=""number"" id=""price'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row += ""</tr>"";
                     inventoryTable.innerHTML += row;
                 }
             }
             }
             else if(colorRows.length != 0 && sizeRows.length ==0){
                 for(var j =1; j<=colorRows.length;j++){
                     var row = ""<tr>"";
                     row += ""<td>"" + colors[j-1] + ""</td>"";
                     row += ""<td>بدون سایز</td>"";
                ");
                WriteLiteral(@"     row+= '<td><input type=""number"" id=""inventory'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row+= '<td><input type=""number"" id=""price'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row += ""</tr>"";
                     inventoryTable.innerHTML += row;
                 }
             }
             else if(colorRows.length == 0 && sizeRows.length !=0){
                 for(var j =1; j<=sizeRows.length;j++){
                     var row = ""<tr>"";
                    row += ""<td>بدون رنگ</td>"";
                     row += ""<td>"" + sizes[j-1] + ""</td>"";
                     row+= '<td><input type=""number"" id=""inventory'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row+= '<td><input type=""number"" id=""price'+i.toString()+j.toString() +'"" class=""validate"" /></td>'
                     row += ""</tr>"";
                     inventoryTable.innerHTML += row;
                 }
             }
             el");
                WriteLiteral("se{\r\n                 inventoryTable.innerHTML = \"\";\r\n             }\r\n        });\r\n\r\n        $(\"#inventoryTable\").on(\'click\', \'.idFeatures\', function () {\r\n            $(this).closest(\'tr\').remove();\r\n        });\r\n    });\r\n</script>\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GetProductByIdDto> Html { get; private set; }
    }
}
#pragma warning restore 1591
