#pragma checksum "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "70563021d0328198bc4986c4a3ef61a01a04d1bd"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Product_Create), @"mvc.1.0.view", @"/Areas/Admin/Views/Product/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70563021d0328198bc4986c4a3ef61a01a04d1bd", @"/Areas/Admin/Views/Product/Create.cshtml")]
    public class Areas_Admin_Views_Product_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("categoryId"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml"
  
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"card\">\r\n    <div class=\"card-content\">\r\n        <div class=\"class=\" input-field\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70563021d0328198bc4986c4a3ef61a01a04d1bd3621", async() => {
                WriteLiteral("\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "70563021d0328198bc4986c4a3ef61a01a04d1bd3897", async() => {
                    WriteLiteral("یک دسته بندی را انتخاب کنید");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 10 "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = ViewBag.Categories;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            <label>دسته بندی ها</label>
        </div>

        <div class=""row"">
            <div class=""input-field col s6"">
                <input type=""text"" class=""validate"" id=""name"">
                <label class=""active"">نام کالا : </label>
            </div>
        </div>
        <div class=""row"">
            <div class=""input-field col s6"">
                <input id=""brand"" type=""text"" class=""validate"">
                <label class=""active"">برند : </label>
            </div>
        </div>
        <div class=""row"">
            <div class=""input-field col s6"">
                <input id=""shortDescription"" type=""text"" class=""validate"">
                <label class=""active""> توضیحات مختصر : </label>
            </div>
        </div>
        <div class=""row"">
            <div class=""input-field col s6"">
                <input id=""description"" type=""text"" class=""validate"">
                <label class=""active"">توضیحات : </label>
            </div>
        </div>
        <div c");
            WriteLiteral(@"lass=""row"">
            <div class=""input-field col s12"">
                <input type=""number"" id=""price"" class=""materialize-textarea"">
                <label for=""textarea1"">قیمت  : </label>
            </div>
        </div>
        <div class=""row"">
            <div class=""input-field col s12"">
                <input type=""number"" id=""inventory"" class=""materialize-textarea"">
                <label for=""textarea1"">تعداد موجود : </label>
            </div>
        </div>
        <div class=""row"">
            <div class=""col s12"">
                <div class=""file-field input-field"">
                    <div class=""btn cyan"">
                        <span>تصاویر</span>
                        <input type=""file"" id=""images"" multiple accept=""image/*"">
                    </div>
                    <div class=""file-path-wrapper"">
                        <input class=""file-path validate"" type=""text"">
                    </div>
                </div>
            </div>
        </div>
    </d");
            WriteLiteral(@"iv>
</div>

<div class=""row"" style=""margin:10px 0px"">
    <div class=""col s12"">
        <div class=""card"">
            <div class=""card-content"">
                <div class=""input-field"">
                    <input type=""text"" id=""keywordValue"" class=""validate"" />
                    <label class=""active"">کلمه کلیدی : </label>
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateKeyword"">
                        افزودن
                    </button>
                </div>

                <br />
                <table class=""highlight"">
                    <thead>
                        <tr>
                            <th>کلمه کلیدی</th>
                        </tr>
                    </thead>
                    <tbody id=""keywordTable"">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class=""row"">
    <div class=""col s12"">
        <div class=""card"">
            <div class=""");
            WriteLiteral(@"card-content"">
                <div class=""input-field"">
                    <input type=""text"" id=""colorValue"" class=""validate"" />
                    <label class=""active"">رنگ :</label>
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateColor"">
                        افزودن
                    </button>
                </div>

                <div class=""input-field"">
                    ");
#nullable restore
#line 108 "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml"
               Write(await Component.InvokeAsync("ColorsInSelectList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateColorByList"">
                        افزودن
                    </button>
                </div>

                <br />
                <table class=""highlight"">
                    <thead>
                        <tr>
                            <th>رنگ</th>
                        </tr>
                    </thead>
                    <tbody id=""colorTable"">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class=""row"">
    <div class=""col s12"">
        <div class=""card"">
            <div class=""card-content"">
                <div class=""input-field"">
                    <input type=""text"" id=""sizeValue"" class=""validate"" />
                    <label class=""active"">سایز : </label>
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateSize"">
                        افزودن
                   ");
            WriteLiteral(" </button>\r\n                </div>\r\n\r\n                <div class=\"input-field\">\r\n                    ");
#nullable restore
#line 142 "E:\asp.net projects\Market\Market.EndPoint\Areas\Admin\Views\Product\Create.cshtml"
               Write(await Component.InvokeAsync("SizesInSelectList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateSizeByList"">
                        افزودن
                    </button>
                </div>

                <br />
                <table class=""highlight"">
                    <thead>
                        <tr>
                            <th>سایز</th>
                        </tr>
                    </thead>
                    <tbody id=""sizeTable"">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class=""row"">
    <div class=""col s12"">
        <div class=""card"">
            <div class=""card-content"">
                <div class=""input-field"">
                    <input type=""text"" id=""featureDisplay"" class=""validate"" />
                    <label class=""active"">نام ویژگی :</label>
                </div>
                <div class=""input-field"">
                    <input type=""text"" id=""featureValue"" class=""validate"" ");
            WriteLiteral(@"/>
                    <label class=""active"">مقدار ویژگی :</label>
                    <button class=""btn green waves-effect waves-light right"" id=""btnCreateFeature"">
                        افزودن
                    </button>
                </div>

                <br />
                <table class=""highlight"">
                    <thead>
                        <tr>
                            <th>نام ویژگی</th>
                            <th>مقدار ویژگی</th>
                        </tr>
                    </thead>
                    <tbody id=""featureTable"">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class=""row"">
    <div class=""input-field col s12"">
        <input type=""submit"" value=""افزودن"" class=""btn green waves-effect waves-light right"" id=""btnSend"">
    </div>
</div>
<br />
<br />
<br />


");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {

            $(""#btnSend"").click(function (e) {

                var formdata = new FormData();
                formdata.append(""Name"", $(""#name"").val());
                formdata.append(""Brand"", $(""#brand"").val());
                formdata.append(""Description"", $(""#description"").val());
                formdata.append(""ShortDescription"", $(""#shortDescription"").val());
                formdata.append(""Inventory"", $(""#inventory"").val());
                formdata.append(""Price"", $(""#price"").val());
                formdata.append(""CategoryId"", $(""#categoryId"").find(""option:selected"").val());

                var productImages = document.getElementById(""images"");
                if (productImages.files.length > 0) {
                    for (var i = 0; i < productImages.files.length; i++) {
                        formdata.append('Images', productImages.files[i]);
                    }
                }

                var Keywords = $('");
                WriteLiteral(@"#keywordTable tr').map(function () {
                    return {
                        KeywordValue: $(this.cells[0]).text(),
                    };
                }).get();
                $.each(Keywords, function (i, val) {
                    formdata.append('[' + i + '].KeywordValue', val.KeywordValue);
                });

                var colors = $('#colorTable tr').map(function () {
                    return {
                        Name: $(this.cells[0]).text(),
                    };
                }).get();
                $.each(colors, function (i, val) {
                    formdata.append('[' + i + '].Name', val.Name);
                });

                var sizes = $('#sizeTable tr').map(function () {
                    return {
                        SizeValue: $(this.cells[0]).text(),
                    };
                }).get();
                $.each(sizes, function (i, val) {
                    formdata.append('[' + i + '].SizeValue', val.SizeValu");
                WriteLiteral(@"e);
                });

                var features = $('#featureTable tr').map(function () {
                    return {
                        Display: $(this.cells[0]).text(),
                        FeatureValue: $(this.cells[1]).text(),
                    };
                }).get();
                $.each(features, function (i, val) {
                    formdata.append('[' + i + '].Display', val.Display);
                    formdata.append('[' + i + '].FeatureValue', val.FeatureValue);
                });

                $.ajax({
                    type: ""POST"",
                    processData: false,
                    contentType: false,
                    cache: false,
                    enctype: ""multipart/form-data"",
                    url: ""/Admin/Product/Create"",
                    data: formdata,
                    success: function (response) {
                        window.location.href = ""/Admin/Product"";
                    }
                });
    ");
                WriteLiteral(@"        });

            //کنترل جدول کلمات کلیدی برای اضافه و حذف نمودن خط به جدول
            $(""#btnCreateKeyword"").click(function (e) {
                var table = document.getElementById(""keywordTable"");
                var keyValue = document.getElementById(""keywordValue"").value;

                if (keyValue !== """") {
                    CreateRow(table, [keyValue], true);
                }

                $(""#keywordValue"").val("""");
            });

            $(""#keywordTable"").on('click', '.idFeatures', function () {
                $(this).closest('tr').remove();
            });

            //کنترل جدول رنگ ها برای افزودن و حذف نمودن خط به جدول
            $(""#btnCreateColor"").click(function (e) {
                var table = document.getElementById(""colorTable"");
                var keyValue = document.getElementById(""colorValue"").value;

                if (keyValue !== """") {
                    CreateRow(table, [keyValue], true);
                }

                $(");
                WriteLiteral(@"""#colorValue"").val("""");
            });

            $(""#colorTable"").on('click', '.idFeatures', function () {
                $(this).closest('tr').remove();
            });

            //کنترل جدول سایز ها برای افزودن و حذف نمودن خط به جدول
            $(""#btnCreateSize"").click(function (e) {
                var table = document.getElementById(""sizeTable"");
                var keyValue = document.getElementById(""sizeValue"").value;

                if (keyValue !== """") {
                    CreateRow(table, [keyValue], true);
                }

                $(""#sizeValue"").val("""");
            });

            $(""#sizeTable"").on('click', '.idFeatures', function () {
                $(this).closest('tr').remove();
            });

            //کنترل جدول ویژگی ها برای افزودن و حذف نمودن خط به جدول
            $(""#btnCreateFeature"").click(function (e) {
                debugger;
                var table = document.getElementById(""featureTable"");
                var display = do");
                WriteLiteral(@"cument.getElementById(""featureDisplay"").value;
                var value = document.getElementById(""featureValue"").value;

                if (value !== """" && display !== """") {
                    CreateRow(table, [display, value], true);
                }

                $(""#featureDisplay"").val("""");
                $(""#featureValue"").val("""");
            });

            $(""#featureTable"").on('click', '.idFeatures', function () {
                $(this).closest('tr').remove();
            });

            //افزودن رنگ با لیست
            $(""#btnCreateColorByList"").click(function (e) {
                var colors = document.getElementById(""ColorsList"").options;
                var table = document.getElementById(""colorTable"");
                debugger;
                for (var i = 0; i < colors.length; i++) {
                    if (colors[i].selected && !colors[i].disabled) {
                        CreateRow(table, [colors[i].value], true);
                    }
                };
");
                WriteLiteral(@"            });

            //افزودن سایر با لیست
            $(""#btnCreateSizeByList"").click(function (e) {
                var sizes = document.getElementById(""SizesList"").options;
                var table = document.getElementById(""sizeTable"");
                debugger;
                for (var i = 0; i < sizes.length; i++) {
                    if (sizes[i].selected && !sizes[i].disabled) {
                        CreateRow(table, [sizes[i].value], true);
                    }
                };
            });

            //متد افزودن خط
            function CreateRow(table, values, withDeleteKey) {
                var newRow = ""<tr>"";
                for (var i = 0; i < values.length; i++) {
                    newRow += ""<td>"" + values[i] + ""</td>"";
                }

                if (withDeleteKey === true) {
                    newRow += '<td><button class=""idFeatures btn red waves-effect waves-light right"" >حذف</button></td>';
                }

                newRow ");
                WriteLiteral("+= \"</tr>\";\r\n                table.innerHTML += newRow;\r\n            }\r\n        });\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
